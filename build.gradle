plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.sonarqube' version '4.4.1.3373'
	id 'jacoco'
	id 'com.github.ben-manes.versions' version '0.47.0'

}

sonarqube {
	properties {
		property("sonar.projectName", "saludArqui")
	}
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.90
			}
		}
	}
}





check.dependsOn jacocoTestCoverageVerification


group = 'com.salud'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

jar {
	enabled = false
}

bootJar {
	archiveFileName = 'arqui-0.0.1-SNAPSHOT.jar'
	mainClass = 'com.salud.arqui.ArquiApplication'
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.json:json:20230227'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.3.4'
	implementation 'org.springframework.boot:spring-boot-starter-web:3.3.4'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'mysql:mysql-connector-java:8.0.33'
	testImplementation "org.mockito:mockito-core:3.+"

	testImplementation 'com.h2database:h2:2.2.222'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.platform:junit-platform-launcher'


}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport
}
